SEQUENCE PROBLEM

Q.1 use Random function to get single digit.

#!/bin/bash/
randomcheck=$(( RANDOM % 10 ));
echo $randomcheck

Q.2 Use Random to get Dice Number between 1 to 6.
#!/bin/bash

x=$(( ( RANDOM % 6) + 1 ));

echo $x

Q.3  Add two Random Dice Number and Print the Result.
#!/bin/bash

x=$(( ( RANDOM % 6) + 1 ));
y=$(( ( RANDOM % 6) + 1 ));

result=$(($x+$y));
echo "Result: "$result


Q.4 Write a program that reads 5 Random 2 Digit values , then find their
sum and the average.
#!/bin/bash

n1=$(( RANDOM % 100 ))
n2=$(( RANDOM % 100 ))
n3=$(( RANDOM % 100))
n4=$(( RANDOM % 100 ))
n5=$(( RANDOM % 100 ))

sum=$(($n1+$n2+$n3+$n4+$n5))
echo "sum of 5 random number : " $sum

avg=$(( $sum / 5))
echo "average of 5 random  numbers: " $avg




Q.5 Unit Conversion 
#!/bin/bash -x

echo “1 ft= 12inch then 42inch=”$(( 42/12 ))
echo “area of rectangular plot 60 feet * 40 feet in metet “
area=$(( 60*40 ))
echo $area
areameter=$( (($area) / 3 ))
echo $areameter
echo “area of such 24 plot in meter”
areameter=$( (($areameter) * 24 ))
acre=$( (( areameter) / 4027))
echo “area in acre of 24 plot” $acre





SELECTION PRACTICE   

Q.1Write a program that reads 5 Random 3 Digit values and then outputs the minimum
and the maximum value
#!/bin/bash -x

a=$(( RANDOM % 1000 ))
b=$(( RANDOM % 1000 ))
c=$(( RANDOM % 1000 ))
d=$(( RANDOM % 1000 ))
e=$(( RANDOM % 1000 ))

if [ $a -gt $b ]  && [ $a -gt $c ]  && [ $a -gt $d ] && [ $a -gt $e ]
then
        echo "$a is maximum"
elif [ $b -gt $a ] && [ $b -gt $c ] && [ $b -gt $d ] && [ $b -gt $e ]
then
        echo "$b is maximum"
elif [ $c -gt $a ] && [ $c -gt $b ] && [ $c -gt $d ] && [ $c -gt $e ]
then
        echo "$c is maximum"
elif [ $d -gt $a ] && [ $d -gt $b ] && [ $d -gt $c ] && [ $d -gt $e ]
then
        echo "$d is maximum "
else
        echo "$e is maximum"
fi

if [ $a -ls $b ] && [ $a -ls $c ] &&  [$a -ls $d ] && [ $a -ls $e ]
then
        echo "$a is minimum"
elif [ $b -ls $a ] && [ $b -ls $c ] && [ $b -ls $d ] && [ $b -ls $e ]
then
        echo "$b is minimum"
elif [ $c -ls $a ] && [ $c -ls $b ] && [ $c -ls $d ] && [ $c -ls $e ]
then
        echo "$c is minimum"
elif [ $d -ls $a ] &&  [ $d -ls $b ] && [ $d -ls $c ] && [ $d -ls $e ]
then
        echo "$d is minimum "
else
        echo "$e is minimum"

fi

Q.2  Write a program that takes day and month from the command line and prints true if
day of month is between March 20 and June 20, false otherwise.

#!/bin/bash -x

read -p "Enter the day : " dd
read -p "Enter the month : " mm


if [ $mm -eq 3 ] && [ $dd -gt 20 ] && [ $dd -lt 3 ]
then
        echo "true"

elif [ $mm -eq 4 ] && [ $dd -gt 1 ] && [ $dd -lt 30 ]
then
        echo "true"

elif [ $mm -eq 5 ] && [ $dd -gt 1 ] && [ $dd -lt 31 ]
then
        echo "true"

elif [ $mm -eq 6 ] && [ $dd -gt 1 ] && [ $dd -lt 20]
then
        echo "true"
else
        echo "false"
fi

Q.3 Write a program that takes a year as input and outputs the Year is a Leap Year or not
a Leap Year. A Leap Year checks for 4 Digit Number, Divisible by 4 and not 100 unless
divisible by 400.

#!/bin/bash

read -p "Enter the year  number you wish : "  yy

if [ $yy % 400 -eq 0]
then
echo " $yy is leap year"

elif [ $yy % 4 -eq 0 ]
then
echo "$yy is leap year"

elif [ ( $yy % 100 ) != 0 ]
then
echo "$yy is leap year"

else
echo "$yy is not leap year"

fi

Q.4 Write a program to simulate a coin flip and print out "Heads" or "Tails" accordingly.
#!/bin/bash

chance=1;
randomcheck=$(( RANDOM % 2))
if [ $chance -eq $randomcheck  ]
  then
        echo "Head"
  else
        echo "Tail"
fi








SECOND SET  Using If Elif

Q.1 Read a single digit number and write the number in word

#!/bin/bash

read -p "enter the number : " num

if [ $num -eq  1 ]
then
        echo " one"

elif [ $num -eq 2 ]
then
        echo "two"

elif [ $num -eq 3 ]
then
        echo "three"

elif [ $num -eq 4 ]
then
        echo "four"

elif [ $num -eq 5 ]
then
        echo "five"

elif [ $num -eq 6 ]
then
        echo "six"

elif [ $num -eq 7 ]
then
        echo "seven"

elif [ $num -eq 8 ]
then
        echo "eight"

elif [ $num -eq 9 ]
then
        echo "nine"
else
       echo “wrong input”
fi



Q.2 Read a Number and Display the week day (Sunday, Monday,…)

#!/bin/bash

read -p "enter the  day number : " num

if [ $num -eq 1 ]
then
        echo "sunday"

elif [ $num -eq 2 ]
then
        echo "monday"

elif [ $num -eq 3 ]
then
        echo "tuesday"

elif [ $num -eq 4 ]
then
        echo "wednesday"

elif [ $num -eq 5 ]
then
        echo "thursday"

elif [ $num -eq 6 ]
then
        echo "friday"

elif [ $num -eq 6 ]
then
        echo "saturday"
else
        echo “wrong input”
fi



Q.4   Enter 3 Numbers do following arithmetic operation and find the one that
is maximum and minimum
1. a + b * c 3. c + a / b
2. a % b + c 4. a * b + c

#!/bin/bash

read -p "Enter 1st number : " a
read -p "Enter 2nd number : " b
read -p "Enter 3rd number : " c

sum1=$(($a+(($b * $c))))
echo "sum1 : " $sum1

sum2=$(((($a % $b)) + $c))
echo "sum2 : " $sum2

sum3=$(($c + (($a / $b))))
echo "sum3 : " $sum3

sum4=$(((($a*$b))+$c))
echo "sum4 : " $sum4

if [ $a > $b && $a > $c]
then
        echo "$a is maximum"
elif [ $b >$a && $b >$c ]
then
        echo "$b is maximum"

else
        echo "$c is maximum "


if [ $a < $b && $a < $c]
then
        echo "$a is minimum "
elif [ $b < $a && $b < $c ]
then
        echo "$b is minimum"

else
        echo "$c is minimum "
fi


Q.3 Read a Number 1, 10, 100, 1000, etc and display unit, ten, hundred

#!/bin/bash

read -p "Enter the number like 1,10,100..."  num

if [ $num -eq  1 ]
then
     echo " unit "
elif [ $num -eq 10 ]
then
     echo "Ten"

elif [ $num -eq 100 ]
then
     echo "hundres"
elif [ $num -eq 1000 ]
then
     echo "thousand"
fi



















THIRD SET   Using switch case 

Q.1 Read a single digit number and write the number in word
#!/bin/bash

echo -n "Enter number : "
read n

    case $n in
        0) echo -n "zero "
                ;;
        1) echo -n "one "
                ;;
        2) echo -n "two "
                ;;
        3) echo -n "three "
                 ;;
        4) echo -n "four "
                ;;
        5) echo -n "five "
                ;;
        6) echo -n "six "
                ;;
        7) echo -n "seven "
                ;;
        8) echo -n "eight "
                 ;;
        9) echo -n "nine "
                ;;
    esac






Q.2Read a Number and Display the week day (Sunday, Monday,…)"

#!/bin/bash

echo "enter the number: "
read n

case $n in
1)echo "sunday" ;;
2)echo "monday" ;;
3)echo "tuesday" ;;
4)echo "wednesday" ;;
5)echo "thursday" ;;
6)echo "friday" ;;
7)echo "saturday" ;;
* )echo "enter value bet 1 to 7 " ;;
esac

	

Q.3 Read a Number 1, 10, 100, 1000, etc and display unit, ten, hundred,…

#!/bin/bash

read -p "Enter  the number like 1,10,100..."  num

case $num in
 1) echo -n  "unit"
        ;;
10) echo -n "ten"
        ;;
100) echo -n "hundred"
        ;;
1000) echo -n "thousand"
        ;;
esac

Q.4 Write a program that takes User Inputs and does Unit Conversion of
different Length units

Not compatible with bash

